apiVersion: v1.1
pipelines:
  - name: my_first_pipeline
    steps:
      - name: p1_s1
        type: Bash
        configuration:
          inputResources:
            # Sets up step to be triggered when there are commit events to myFirstRepo
            - name: myFirstRepo
        execution:
          onExecute:
            - pwd
            - ls
            - echo $res_myFirstRepo_resourcePath
            - ls $res_myFirstRepo_resourcePath
            - cat $res_myFirstRepo_resourcePath/pom.xml
            # Data from input resources is available as env variables in the step
            - echo $res_myFirstRepo_commitSha
            # The next two commands add variables to run state, which is available to all downstream steps in this run
            # Run state documentation: https://www.jfrog.com/confluence/display/JFROG/Creating+Stateful+Pipelines#CreatingStatefulPipelines-RunState
            - add_run_variables current_runid=$run_id
            - add_run_variables commitSha=$res_myFirstRepo_commitSha
            # This variable is written to pipeline state in p1_s3.
            # So this will be empty during first run and will be set to prior run number in subsequent runs
            # Pipeline state documentation: https://www.jfrog.com/confluence/display/JFROG/Creating+Stateful+Pipelines#CreatingStatefulPipelines-PipelineState
            - echo "Previous run ID is $prev_runid"
            # - cd $res_myFirstRepo_resourcePath
            # - git checkout master
            # - clean install -DskipTests -Dver=1.0.$run_id -Did=$pipeline_name

      - name: p1_s2
        type: Bash
        configuration:
          inputSteps:
            - name: p1_s1
        execution:
          onExecute:
            # Demonstrates the availability of an env variable written to run state during p1_s1
            - echo $current_runid
        
      # - name: p1_s2
      #   type: PublishBuildInfo
      #   configuration:
      #     forceXrayScan: false
      #     failOnScan: false
      #     inputSteps:
      #       - name: p1_s1
      #     outputResources:
      #       - name: mvn_build_info

      - name: p1_s3
        type: Bash
        configuration:
          inputSteps:
            - name: p1_s2
          outputResources:
            - name: myPropertyBag
          runtime:
            type: image
            image:
              auto:
                language: java
                versions:
                  - '8'
        execution:
          onExecute:
            - echo $current_runid
            # Writes current run number to pipeline state
            - add_pipeline_variables prev_runid=$run_id
            # Uses an utility function to update the output resource with the commitSha that triggered this run
            # Dependent pipelines can be configured to trigger when this resource is updated
            # Utility functions documentation: https://www.jfrog.com/confluence/display/JFROG/Pipelines+Utility+Functions
            - write_output myPropertyBag commitSha=$commitSha runID=$current_runid

  - name: my_second_pipeline
    steps:
      - name: p2_s1
        type: Bash
        configuration:
          inputResources:
            # Sets up step to be triggered when myPropertyBag is updated
            - name: myPropertyBag
        execution:
          onExecute:
            # Retrieves the commitSha from input resource
            - echo "CommitSha is $res_myPropertyBag_commitSha"